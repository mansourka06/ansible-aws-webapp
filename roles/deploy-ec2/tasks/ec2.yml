---
# tasks file for deploy aws EC2 
- name: Create a security group for webapp server
  ec2_group:
    name: "{{ security_group_name }}"
    description: "{{ security_group_name }}"
    region: "{{ region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0

- name: Deploy EC2 Server
  ec2:
    group: "{{ security_group_name }}"
    key_name: "{{ key_name }}"
    instance_type: "{{ instance_type }}"
    image: "{{ ami_id }}"
    wait: yes
    wait_timeout: 600
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: 20
    count: 1
    vpc_subnet_id: "{{ subnet }}"
    assign_public_ip: yes
    region: "{{ region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    id: "{{ token_id }}"
  register: ec2

- name: Get public IP adress of webapp server
  set_fact: 
    public_ip: "{{ item.public_ip }}"
  loop: "{{ ec2.instances }}"
  register: public_ip

- name: Add the newly created host {{ public_ip }} to ec2 group
  add_host:
    name: "{{ item.public_ip }}"
    groups: "{{ host_group_name }}"
  loop: "{{ ec2.instances }}"

- name: Add tag to instance {{ public_ip }}
  ec2_tag:
    resource: "{{ item.id }}"
    region: "{{ region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    state: "present"
    tags:
      Name: "{{ tag_name }}"
  loop: "{{ ec2.instances }}"

- name: Wait for SSH to come up server {{ public_ip }}
  wait_for:
    host: "{{ item.public_ip }}"
    port: 22
    state: started
  loop: "{{ ec2.instances }}"

...
